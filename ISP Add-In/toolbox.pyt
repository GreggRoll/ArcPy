# -*- coding: utf-8 -*-import arcpyimport osclass Toolbox(object):    def __init__(self):        """Define the toolbox (the name of the toolbox is the name of the .pyt file)."""        self.label = "Toolbox"        self.alias = "toolbox"        self.tools = [Tool]class Tool(object):    def __init__(self):        """Define the tool (tool name is the name of the class)."""        self.label = "Path Input Tool"        self.description = "A tool to input a path and display log statements."        self.canRunInBackground = False    def getParameterInfo(self):        """Define parameter definitions"""                # First parameter is for input path        param0 = arcpy.Parameter(            displayName="Input Path",            name="in_path",            datatype="DEFile",            parameterType="Required",            direction="Input")                params = [param0]        return params    def isLicensed(self):        """Set whether tool is licensed to execute."""        return True    def execute(self, parameters, messages):        """The source code of the tool."""                input_path = parameters[0].valueAsText  # Get the input path parameter        arcpy.AddMessage(f"Input Path: {input_path}")  # Log input path                # Check if path exists        if os.path.exists(input_path):            arcpy.AddMessage(f"Path exists: {input_path}")        else:            arcpy.AddError(f"Path does not exist: {input_path}")                # Add any additional logic or processing here        # For example, reading a file and processing its contents                return# For testing outside of ArcGIS, remove the below lines.# if __name__ == '__main__':#     tool = Tool()#     tool.execute(None, None)